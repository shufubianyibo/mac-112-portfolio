{
  "hash": "f8d6869127ba0b17bbf75390d1f6eab0",
  "result": {
    "markdown": "Create a new Quarto document in the activities folder of your portfolio project and do not forgot to include it in _quarto.yml file. Then click the </> Code link at the top right corner of this page and copy the code into the created Quarto document. This is where you’ll take notes. Remember that the portfolio is yours, so take notes in whatever way is best for you.\nDon’t start the Exercises section before we get there as a class. First, engage in class discussion and eventually collaborate with your group on the exercises!\n8.1 Data Wrangling Motivation\nRecall the elections data by U.S. county:\n\n# Load tidyverse & data\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-1_88cfb757975ebaa2382af25f8e4f14ae'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nelections <- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n```\n:::\n\n\nWe’ve used data viz to explore some general patterns in the election outcomes. For example, a map!\n\n# Get a background map\nlibrary(socviz)\ndata(county_map)\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-2_19f67201195f95b2447265168d2d4378'}\n\n```{.r .cell-code}\nlibrary(socviz)\ndata(county_map)\n```\n:::\n\n\n# Make a choropleth map\nlibrary(RColorBrewer)  # For the color scale\nlibrary(ggthemes) # For theme_map\nelections |> \n  mutate(county_fips = as.character(county_fips)) |> \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips)) |> \n  ggplot(aes(map_id = county_fips, fill = cut(repub_pct_20, breaks = seq(0, 100, by = 10)))) +\n    geom_map(map = county_map) +\n    scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n    expand_limits(x = county_map$long, y = county_map$lat)  + \n    theme_map() +\n    theme(legend.position = \"right\") + \n    coord_equal()\n\n\n\nConsider some fairly basic follow-up questions, each of which we cannot answer precisely (or sometimes even at all) using our data viz tools:\n\nHow many total people voted for the Democratic and Republican candidates in 2020?\nWhat about in each state?\nIn just the state of Minnesota:\nWhich counties had the highest and lowest Democratic vote in 2020?\nHow did the Democratic vote in each county change from 2016 to 2020?\n\n\n\n\n\nGoals of Unit 2: Data Wrangling\nWe really cannot do anything with data (viz, modeling, etc) unless we can wrangle the data. The following is a typical quote. I agree with the 90% – data wrangling isn’t something we have to do before we can do data science, it is data science! But let’s rethink the 10% – data wrangling is a fun and empowering puzzle!\n\n\n\nThe goals of Unit 2 are to explore how to:\n\nGet data into the tidy shape / format we need for analysis. For example, we might want to:\nkeep only certain observations\ndefine new variables\nreformat or “clean” existing variables\ncombine various datasets\nprocess “string” or text data\nNumerically (not just visually) explore and summarize various characteristics of the variables in our dataset.\n\n\n\n\n\nTidyverse Wrangling Tools\nWe’ll continue to use packages that are part of the tidyverse which share a common general grammar and structure.\n\n\n\n\n\n\n\n\n8.2 Warm-Up\nThere are lots and lots of steps that can go into data wrangling, thus lots and lots of relevant R functions. BUT just 6 functions can get us very far. People refer to these as the 6 main wrangling verbs or functions:\n\nwhy “verbs”? in the tidyverse grammar, functions serve as action words\nthe 6 verbs are all stored in the dplyr package within the tidyverse\neach verb acts on a data frame and returns a data frame\n\n\n\nverb\taction\narrange\tarrange the rows according to some column\nfilter\tfilter out or obtain a subset of the rows\nselect\tselect a subset of columns\nmutate\tmutate or create a column\nsummarize\tcalculate a numerical summary of a column\ngroup_by\tgroup the rows by a specified column\n\n\n\n\n\nEXAMPLE 1\n\nWhich verb would help us…\n\nkeep only information about state names, county names, and the 2020 and 2016 Democratic support (not the 2012 results, demographics, etc)\n\nget only the data on Minnesota\n\ndefine a new variable which calculates the change in Democratic support from 2016 to 2020, using dem_pct_20 and dem_pct_16\n\nsort the counties from highest to lowest Democratic support\n\ndetermine the total number of votes cast across all counties\n\n\n\n\n\n\nEXAMPLE 2: select columns\n\nTo get a sense for the code structure, let’s explore a couple verbs together. To start, let’s simplify our dataset to include only some variables of interest. Specifically, select() only the columns relevant to state names, county names, and the 2020 and 2016 Democratic support:\n\n# What's the first argument? The second?\nselect(elections, c(state_name, county_name, dem_pct_20, dem_pct_16))\n\nLet’s re-do this with the pipe function |>:\n\nelections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16)\n\n\n\n\n\n\nPipe Function |>\n|> “passes” objects, usually datasets, to a function:\n\nobject |> function() is the same as function(object)\n\n\n\n\n\n\nEXAMPLE 3: filter rows\n\nLet’s filter() out only the rows related to Minnesota (MN):\n\n# Without a pipe\nfilter(elections, state_name == \"Minnesota\")\n\n# With a pipe\nelections |> \n  filter(state_name == \"Minnesota\")\n\n\n\n\n\n\n== vs =\nWe use a == b to check whether a matches b.\n\nWe use a = b to define that a is equal to b. We typically use = for this purpose inside a function, and <- for this purpose outside a function.\n\n# Ex: \"=\" defines x\nx = 2\nx\n\n[1] 2\n# Ex: \"==\" checks whether x is/matches 3\nx == 3\n\n[1] FALSE\n\n\n\n\n\nEXAMPLE 4: filter and select\n\nLet’s combine select() and filter() to create a new dataset with info about the county names, and 2020 and 2016 Democratic support among Minnesota counties.\n\n# Without pipes\nfilter(select(elections, c(state_name, county_name, dem_pct_20, dem_pct_16)), state_name == \"Minnesota\")\n\n# With pipes: all verbs in 1 row\nelections |> select(state_name, county_name, dem_pct_20, dem_pct_16) |> filter(state_name == \"Minnesota\")\n\n# With pipes: each verb in a new row\nelections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16) |> \n  filter(state_name == \"Minnesota\")\n\n# We can even do this with UN-tidyverse code in \"base\" R\nelections[elections$state_name == \"Minnesota\", c(1, 4, 8, 12)]\n\nReflection\nWhy will we typically use:\n\ntidyverse code\nthe pipe function |>\neach verb on a new row\n\n\n\n\n\nEXAMPLE 5: order of operations\n\nSometimes, the order of operations matters. For example: putting on socks, then shoes produces a different result than putting on shoes, then socks. Sometimes order doesn’t matter. For example: Pouring cereal into a bowl, then adding milk produces the same result as pouring milk into a bowl, then adding cereal (though one order is obviously better than the other ;)) Above (also copied below), we selected some columns and then filtered some rows:\n\nelections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16) |> \n  filter(state_name == \"Minnesota\")\n\nWould we get the same result if we reversed select() and filter()? Think first, then try it.\n\n# Try it\n\n\n\n\n\n\nEXAMPLE 6: Storing the results\n\nTypically:\n\nWe want to store our data wrangling results.\nIt’s good practice to do so under a new name. We want to preserve, thus don’t want to overwrite, the original data (especially if our code contains errors!!).\n# Store the results\nmn <- elections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16) |> \n  filter(state_name == \"Minnesota\")\n\n# Always check it out to confirm it's what you want it to be!\nhead(mn)\n\n  state_name      county_name dem_pct_20 dem_pct_16\n1  Minnesota    Aitkin County      35.98      34.12\n2  Minnesota     Anoka County      47.79      41.01\n3  Minnesota    Becker County      33.96      30.47\n4  Minnesota  Beltrami County      47.24      40.76\n5  Minnesota    Benton County      32.70      28.33\n6  Minnesota Big Stone County      35.41      33.75\nnrow(mn)\n\n[1] 87\nnrow(elections)\n\n[1] 3109\n8.3 Exercises\nExercise 1: select practice\n6 verbs: select, filter, arrange, mutate, summarize, group_by\n\nUse select() to create a simplified dataset that we’ll use throughout the exercises below.\n\nStore this dataset as elections_small.\nOnly keep the following variables: state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-3_9e326d6c532d8e93e8f229fb25c6441b'}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n# Define elections_small\nelections_small <- elections |>\n  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)\n\n# Check out the first 6 rows to confirm your code did what you think it did!\nhead(elections_small)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09\n```\n:::\n:::\n\n\n\n\n\n\n\n\nExercise 2: filter demo\n6 verbs: select, filter, arrange, mutate, summarize, group_by\n\nWhereas select() selects certain variables or columns, filter() keeps certain units of observation or rows relative to their outcome on certain variables. To this end, we must:\n\nIdentify the variable(s) that are relevant to the filter.\n\nUse a “logical comparison operator” to define which values of the variable to keep:\n\nsymbol\tmeaning\n==\tequal to\n!=\tnot equal to\n>\tgreater than\n>=\tgreater than or equal to\n<\tless than\n<=\tless than or equal to\n%in% c(???, ???)\ta list of multiple values\nUse quotes \"\" when specifying outcomes of interest for a categorical variable.\n\n\n\n\nCommenting/Uncommenting Code\nTo comment/uncomment several lines of code at once, highlight them then click ctrl/cmd+shift+c.\n\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-4_3628ec1fc49d5dff316cb883db515fd8'}\n\n```{.r .cell-code}\n# Keep only data on counties in Hawaii\nelections_small |>\n  filter(state_name == \"Hawaii\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n```\n:::\n:::\n\n\n# What does this do?\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-5_408b91919daf51d1b3bbba3acc5f1b67'}\n\n```{.r .cell-code}\nelections_small |> \n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n```\n:::\n:::\n\n# This code only keep the counts in Delaware and Hawaii.\n\n# Keep only data on counties where the Republican got MORE THAN 93.97% of the vote in 2020\n# THINK: What variable is relevant here?\n# repub_pct_20 is relevant.\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-6_3c0330ec32159cd449aab6c8f2471782'}\n\n```{.r .cell-code}\nelections_small |> \n  filter(repub_pct_20 > 93.97)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  Borden County            416        95.43       3.85\n2      Texas    King County            159        94.97       5.03\n3      Texas Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            365       8.49\n2            159       3.14\n3            550       3.64\n```\n:::\n:::\n\n\n\n# Keep only data on counties where the Republican got AT LEAST 93.97% of the vote in 2020\n# This should have 1 more row than your answer above\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-7_f88b7bc2ebbcd806f9e65cce0af4db4f'}\n\n```{.r .cell-code}\nelections_small |> \n  filter(repub_pct_20 >= 93.97) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Montana Garfield County            813        93.97       5.04\n2      Texas   Borden County            416        95.43       3.85\n3      Texas     King County            159        94.97       5.03\n4      Texas  Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            715       4.76\n2            365       8.49\n3            159       3.14\n4            550       3.64\n```\n:::\n:::\n\n\n\nWe can also filter with respect to 2 rules! Here, think what variables are relevant.\n\n# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020\n# Do this 2 ways.\n# Method 1: 2 filters with 1 condition each\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-8_8e7414a6c4df396b3f26efc66fbff4e7'}\n\n```{.r .cell-code}\nelections_small |> \n  filter(dem_pct_20 > 65) |> \n  filter(state_name == \"Texas\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n```\n:::\n:::\n\n\n\n# Method 2: 1 filter with 2 conditions\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-9_a9ffdc80b389328a17659db4b74ece9c'}\n\n```{.r .cell-code}\nelections_small |> \n  filter(dem_pct_20 > 65, state_name == \"Texas\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n```\n:::\n:::\n\n\n\n\n\n\n\n\nExercise 3: arrange demo\n6 verbs: select, filter, arrange, mutate, summarize, group_by\n\narrange() arranges or sorts the rows in a dataset according to a given column or variable, in ascending or descending order:\n\narrange(variable), arrange(desc(variable))\n\n# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-10_99c00ab6547459d135431f707f6d0498'}\n\n```{.r .cell-code}\n# Print out just the first 6 rows\nelections_small |> \n  arrange(repub_pct_20) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            state_name            county_name total_votes_20 repub_pct_20\n1 District of Columbia   District of Columbia         344356         5.40\n2             Maryland Prince George's County         424855         8.73\n3             Maryland         Baltimore city         237461        10.69\n4             Virginia        Petersburg city          14118        11.22\n5             New York        New York County         694904        12.26\n6           California   San Francisco County         443458        12.72\n  dem_pct_20 total_votes_16 dem_pct_16\n1      92.15         280272      92.85\n2      89.26         351091      89.33\n3      87.28         208980      85.44\n4      87.75          13717      87.52\n5      86.78         591368      87.17\n6      85.27         365295      85.53\n```\n:::\n:::\n\n\n\n# Arrange the counties in elections_small from highest to lowest percentage of 2020 Republican support\n# Print out just the first 6 rows\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-11_11fe04bb2a1432ab421c3b14f2c8507f'}\n\n```{.r .cell-code}\nelections_small |> \n  arrange(desc(repub_pct_20)) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name      county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas   Roberts County            550        96.18       3.09\n2      Texas    Borden County            416        95.43       3.85\n3      Texas      King County            159        94.97       5.03\n4    Montana  Garfield County            813        93.97       5.04\n5      Texas Glasscock County            653        93.57       5.97\n6   Nebraska     Grant County            402        93.28       4.98\n  total_votes_16 dem_pct_16\n1            550       3.64\n2            365       8.49\n3            159       3.14\n4            715       4.76\n5            602       5.65\n6            394       5.08\n```\n:::\n:::\n\n\n\n\n\n\n\n\nExercise 4: mutate demo\n6 verbs: select, filter, arrange, mutate, summarize, group_by\n\nmutate() can either transform / mutate an existing variable (column), or define a new variable based on existing ones.\n\nPart a\n# What did this code do?\nThis code create a new variable called \"diff_20\" by \"repub_pct_20\" minus \"dem_pct_20\" to represent the difference between the precentage of votes in republic and democracy.\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-12_96dc6b07e6b8fb2e3992bc750f2ac31d'}\n\n```{.r .cell-code}\nelections_small |> \n  mutate(diff_20 = repub_pct_20 - dem_pct_20) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 diff_20\n1          24661      23.96   44.42\n2          94090      19.57   53.76\n3          10390      46.66    7.66\n4           8748      21.42   57.73\n5          25384       8.47   80.00\n6           4701      75.09  -49.86\n```\n:::\n:::\n\n\n# What did this code do?\nThis code created a new variable called \"repub_votes_20\" by multiply \"total_votes_20\" with the percentage of repucblic votes to represent the number of votes of republic in 2020.\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-13_e3d73b65e5213d868791cad96651e12b'}\n\n```{.r .cell-code}\nelections_small |> \n  mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_votes_20\n1          24661      23.96          19839\n2          94090      19.57          83542\n3          10390      46.66           5622\n4           8748      21.42           7525\n5          25384       8.47          24711\n6           4701      75.09           1146\n```\n:::\n:::\n\n\n\n# What did this code do?\nThis code created a new variable called \"repub_win_20\" to show whether republic has more vote percentage.\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-14_026b548b8907af0832ae5d11b5a6d18e'}\n\n```{.r .cell-code}\nelections_small |> \n  mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_win_20\n1          24661      23.96         TRUE\n2          94090      19.57         TRUE\n3          10390      46.66         TRUE\n4           8748      21.42         TRUE\n5          25384       8.47         TRUE\n6           4701      75.09        FALSE\n```\n:::\n:::\n\n\n\nPart b\n# You try\n# Define a variable that calculates the change in Dem support in 2020 vs 2016\n#elections_small |> \n#  mutate(_____) |> \n#  head()\n\n# You try\n# Define a variable that determines whether the Dem support was higher in 2020 than in 2016 (TRUE/FALSE)\n#elections_small |> \n#  mutate(_____) |> \n#  head()\n\n\n\n\n\n\nExercise 5: Pipe series\nLet’s now combine these verbs into a pipe series!\n\nPart a\nThink then Run\nBEFORE running the below chunk, what do you think it will produce?\n\n# elections_small |> \n#   filter(state_name == \"Wisconsin\",\n#          repub_pct_20 < dem_pct_20) |> \n#   arrange(desc(total_votes_20)) |> \n#   head()\n\nPart b\nThink then Run\nBEFORE trying, what do you think will happen if you change the order of filter and arrange:\n\nthe results will be the same\nwe’ll get an error\nwe won’t get an error, but the results will be different\n# Now try it. Change the order of filter and arrange below.\n# elections_small |> \n#   filter(state_name == \"Wisconsin\",\n#          repub_pct_20 < dem_pct_20) |> \n#   arrange(desc(total_votes_20)) |> \n#   head()\n\nPart c\nSo the order of filter() and arrange() did not matter – rerranging them produces the same results. BUT what is one advantage of filtering before arranging?\n\nPart d\nThink then Run\nBEFORE running the below chunk, what do you think it will produce?\n\n# elections_small |> \n#   filter(state_name == \"Delaware\") |> \n#   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n#   select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n\nPart e\nThink then Run\nBEFORE trying, what do you think will happen if you change the order of mutate and select:\n\nthe results will be the same\nwe’ll get an error\nwe won’t get an error, but the results will be different\n# Now try it. Change the order of mutate and select below.\n# elections_small |> \n#   filter(state_name == \"Delaware\") |> \n#   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n#   select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n\n\n\n\n\n\nExercise 6: DIY pipe series\nWe’ve now learned 4 of the 6 wrangling verbs: select, filter, mutate, arrange. Let’s practice combining these into pipe series. Here are some hot tips:\n\nBefore writing any code, translate the prompt: how many distinct wrangling steps are needed and what verb do we need in each step?\nAdd each verb one at a time – don’t try writing a whole chunk at once.\nPart a\nShow just the counties in Minnesota and their Democratic 2020 vote percentage, from highest to lowest. Your answer should have just 2 columns.\n\nPart b\nCreate a new dataset named mn_wi that sorts the counties in Minnesota and Wisconsin from lowest to highest in terms of the change in Democratic vote percentage in 2020 vs 2016. This dataset should include the following variables (and only these variables): state_name, county_name, dem_pct_20, dem_pct_16, and a variable measuring the change in Democratic vote percentage in 2020 vs 2016.\n\n# Define the dataset\n# Only store the results once you're confident that they're correct\n\n\n# Check out the first 6 rows to confirm your results\n\nPart c\nConstruct and discuss a plot of the county-level change in Democratic vote percent in 2020 vs 2016, and how this differs between Minnesota and Wisconsin.\n\n\n\n\n\n\nExercise 7: summarize demo\n6 verbs: select, filter, arrange, mutate, summarize, group_by\n\nLet’s talk about the last 2 verbs. summarize() (or equivalently summarise()) takes an entire data frame as input and outputs a single row with one or more summary statistics. For each chunk below, indicate what the code does.\n\n# What does this do?\n# elections_small |> \n#   summarize(median(repub_pct_20))\n\n# What does this do?\n# elections_small |> \n#   summarize(median_repub = median(repub_pct_20))\n\n# What does this do?\n# elections_small |> \n#   summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n\n\n\n\n\n\nExercise 8: summarize + group_by demo\n6 verbs: select, filter, arrange, mutate, summarize, group_by\n\nFinally, group_by() groups the units of observation or rows of a data frame by a specified set of variables. Alone, this function doesn’t change the appearance of our dataset or seem to do anything at all:\n\n# elections_small |> \n#   group_by(state_name) |> \n#   head()\n\nThough it does change the underlying structure of the dataset:\n\n# Check out the structure before and after group_by\n# elections_small |> \n#   class()\n# \n# elections_small |> \n#   group_by(state_name) |> \n#   class()\n\nWhere it really shines is in partnership with summarize().\n\n# What does this do?\n# (What if we didn't use group_by?)\n# elections_small |> \n#   group_by(state_name) |> \n#   summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20)) \n\nReflect\nNotice that group_by() with summarize() produces new data frame or tibble! But the units of observation are now states instead of counties within states.\n\n\n\n\n\n\nExercise 9: DIY\nLet’s practice (some of) our 6 verbs: select, filter, arrange, mutate, summarize, group_by Remember:\n\nBefore writing any code, translate the given prompts: how many distinct wrangling steps are needed and what verb do we need in each step?\nAdd each verb one at a time.\nPart a\nNOTE: Part a is a challenge exercise. If you get really stuck, move on to Part b which is the same overall question, but with hints.\n\n# Sort the *states* from the most to least total votes cast in 2020\n\n# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each *state*?\n\n# What states did the Democratic candidate win in 2020?\n\nPart b\n# Sort the states from the most to least total votes cast in 2020\n# HINT: Calculate the total number of votes in each state, then sort\n\n# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each state?\n# HINT: First calculate the number of Dem and Repub votes in each *county*\n# Then group and summarize these by state\n\n# What states did the Democratic candidate win in 2020?\n# HINT: Start with the results from the previous chunk, and then keep only some rows\n\n\n\n\n\n\nExercise 10: Practice on new data\nRecall the World Cup football/soccer data from TidyTuesday:\n\nworld_cup <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n\nYou can find a codebook here. Use (some of) our 6 verbs (select, filter, arrange, mutate, summarize, group_by) and data viz to address the following prompts.\n\n# In what years did Brazil win the World Cup?\n\n# What were the 6 World Cups with the highest attendance?\n\n# Construct a univariate plot of goals_scored (no wrangling necessary)\n# This provides a visual summary of how the number of goals_scored varies from World Cup to World Cup\n\n# Let's follow up the plot with some more precise numerical summaries\n# Calculate the min, median, and max number of goals_scored across all World Cups\n# NOTE: Visually compare these numerical summaries to what you observed in the plot\n\n# Construct a bivariate plot of how the number of goals_scored in the World Cup has changed over the years\n# No wrangling necessary\n\n# Our above summaries might be a bit misleading.\n# The number of games played at the World Cup varies.\n# Construct a bivariate plot of how the typical number of goals per game has changed over the years\n\n\n\n\n\n\nExercise 11: Practice on your data\nReturn to the TidyTuesday data you’re using in Homework 3. Use your new wrangling skills to play around. What new insights can you gain?!\n\n\n\n\n\n\n8.4 Solutions\nClick for Solutions\n7  Effective Viz\n9  Wrangling Practice\nSource Code\n\n\n---\ntitle: \"Wrangling Verbs\"\nnumber-sections: true\nexecute: \n  warning: false\nfig-env: 'figure'\nfig-pos: 'h'\nfig-align: center\ncode-fold: false\n---\n\n\n::: {.callout-caution title=\"Learning Goals\"}\n-   Explore the following wrangling verbs: `select`, `mutate`, `filter`, `arrange`, `summarize`, `group_by`\n-   Use the native pipe operator `|>`\n:::\n\n::: {.callout-note title=\"Additional Resources\"}\nFor more information about the topics covered in this chapter, refer to the resources below:\n\n-   [Intro to dplyr (YouTube)](https://www.youtube.com/watch?v=dqP0DejI7lw) by Lisa Lendway\n-   [Demonstration of dplyr (YouTube)](https://www.youtube.com/watch?v=PgZvq7ZPvEE&feature=youtu.be) by Lisa Lendway\n-   [Data Transformation (html)](https://r4ds.hadley.nz/data-transform.html) by Wickham, Çetinkaya-Rundel, & Grolemund\n-   [A Grammar for Data Wrangling (html)](https://mdsr-book.github.io/mdsr2e/ch-dataI.html) by Baumer, Kaplan, and Horton\n:::\n\n\n\n## Data Wrangling Motivation\n\nRecall the elections data by U.S. county:\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-15_45b04597e97133fb6d91bd1af62ddb5c'}\n\n```{.r .cell-code}\n# Load tidyverse & data\nlibrary(tidyverse)\nelections <- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n```\n:::\n\n\nWe've used data viz to explore some general patterns in the election outcomes. For example, a map!\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-16_698cd3150a872e1480653242043b62bb'}\n\n```{.r .cell-code}\n# Get a background map\nlibrary(socviz)\ndata(county_map)\n\n# Make a choropleth map\nlibrary(RColorBrewer)  # For the color scale\nlibrary(ggthemes) # For theme_map\nelections |> \n  mutate(county_fips = as.character(county_fips)) |> \n  mutate(county_fips = \n           ifelse(nchar(county_fips) == 4, paste0(\"0\", county_fips), county_fips)) |> \n  ggplot(aes(map_id = county_fips, fill = cut(repub_pct_20, breaks = seq(0, 100, by = 10)))) +\n    geom_map(map = county_map) +\n    scale_fill_manual(values = rev(brewer.pal(10, \"RdBu\")), name = \"% Republican\") +\n    expand_limits(x = county_map$long, y = county_map$lat)  + \n    theme_map() +\n    theme(legend.position = \"right\") + \n    coord_equal()\n```\n\n::: {.cell-output-display}\n![](activity-08_files/figure-html/unnamed-chunk-16-1.png){width=768}\n:::\n:::\n\n\nConsider some fairly basic follow-up questions, each of which we cannot answer precisely (or sometimes even at all) using our data viz tools:\n\n-   How many total people voted for the Democratic and Republican candidates in 2020?\n-   What about in each state?\n-   In just the state of Minnesota:\n    -   Which counties had the highest and lowest Democratic vote in 2020?\n    -   How did the Democratic vote in each county *change* from 2016 to 2020?\n\n\\\n\\\n\\\n\\\n\n### Goals of Unit 2: Data Wrangling {-}\n\nWe really cannot do anything with data (viz, modeling, etc) *unless* we can wrangle the data. The following is a typical quote. I agree with the 90% -- data wrangling isn't something we have to do before we can do data science, it *is* data science! But let's rethink the 10% -- data wrangling is a fun and empowering puzzle!\n\n![](https://mac-stat.github.io/images/112/david_robinson.png)\n\nThe goals of Unit 2 are to explore how to:\n\n-   Get data into the tidy shape / format we need for analysis. For example, we might want to:\n    -   keep only certain observations\n    -   define new variables\n    -   reformat or \"clean\" existing variables\n    -   combine various datasets\n    -   process \"string\" or text data\n-   Numerically (not just visually) explore and summarize various characteristics of the variables in our dataset.\n\n\\\n\\\n\\\n\\\n\n### Tidyverse Wrangling Tools {-}\n\nWe'll continue to use packages that are part of the `tidyverse` which share a common general grammar and structure.\n\n![](https://mac-stat.github.io/images/112/tidyverse.png)\n\n\\\n\\\n\\\n\\\n\n## Warm-Up\n\nThere are lots and lots of steps that can go into data wrangling, thus lots and lots of relevant R functions. BUT just 6 functions can get us very far. People refer to these as the 6 main **wrangling verbs** or functions:\n\n-   why \"verbs\"? in the `tidyverse` grammar, functions serve as *action words*\n-   the 6 verbs are all stored in the `dplyr` package within the `tidyverse`\n-   each verb acts on a data frame and returns a data frame\n\n\\\n\\\n\n| verb        | action                                            |\n|:------------|:--------------------------------------------------|\n| `arrange`   | **arrange** the *rows* according to some *column* |\n| `filter`    | **filter** out or obtain a subset of the *rows*   |\n| `select`    | **select** a subset of *columns*                  |\n| `mutate`    | **mutate** or create a *column*                   |\n| `summarize` | calculate a numerical **summary** of a *column*   |\n| `group_by`  | **group** the *rows* by a specified *column*      |\n\n\\\n\\\n\\\n\\\n\n**EXAMPLE 1**\n\nWhich verb would help us...\n\na.  keep *only* information about state names, county names, and the 2020 and 2016 Democratic support (not the 2012 results, demographics, etc)\n\nb.  get *only* the data on Minnesota\n\nc.  define a new variable which calculates the *change* in Democratic support from 2016 to 2020, using `dem_pct_20` and `dem_pct_16`\n\nd.  sort the counties from highest to lowest Democratic support\n\ne.  determine the total number of votes cast across all counties\n\n\\\n\\\n\\\n\\\n\n**EXAMPLE 2: select columns**\n\nTo get a sense for the code structure, let's explore a couple verbs together. To start, let's simplify our dataset to include only some variables of interest. Specifically, `select()` only the *columns* relevant to state names, county names, and the 2020 and 2016 Democratic support:\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-17_c36a9fe118442b8a776d0800f0dd3109'}\n\n```{.r .cell-code}\n# What's the first argument? The second?\nselect(elections, c(state_name, county_name, dem_pct_20, dem_pct_16))\n```\n:::\n\n\nLet's re-do this with the **pipe function** `|>`:\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-18_152037d5bff047acf887a0c1c457dd65'}\n\n```{.r .cell-code}\nelections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16)\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n::: {.callout-note title=\"Pipe Function `|>`\"}\n`|>` \"passes\" objects, usually datasets, to a function:\n\n`object |> function()` is the same as `function(object)`\n:::\n\n\\\n\\\n\\\n\\\n\n**EXAMPLE 3: filter rows**\n\nLet's `filter()` out only the *rows* related to Minnesota (MN):\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-19_fe378586e48ae14e5224bafa9c2c2976'}\n\n```{.r .cell-code}\n# Without a pipe\nfilter(elections, state_name == \"Minnesota\")\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-20_85a13f695b824265622e7055f73ea597'}\n\n```{.r .cell-code}\n# With a pipe\nelections |> \n  filter(state_name == \"Minnesota\")\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n::: {.callout-note title=\"`==` vs `=`\"}\nWe use `a == b` to check whether `a` *matches* `b`.\n\nWe use `a = b` to *define* that `a` is equal to `b`. We typically use `=` for this purpose inside a function, and `<-` for this purpose outside a function.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-21_5fc51448b45ce3e03d553c51c0a47920'}\n\n```{.r .cell-code}\n# Ex: \"=\" defines x\nx = 2\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-22_fa28525fda2d721e1aae9ef1742fcb35'}\n\n```{.r .cell-code}\n# Ex: \"==\" checks whether x is/matches 3\nx == 3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] FALSE\n```\n:::\n:::\n\n:::\n\n\\\n\\\n\\\n\\\n\n**EXAMPLE 4: filter and select**\n\nLet's *combine* `select()` and `filter()` to create a new dataset with info about the county names, and 2020 and 2016 Democratic support among Minnesota counties.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-23_723689c7d2d242311ba8fa29e01bacf4'}\n\n```{.r .cell-code}\n# Without pipes\nfilter(select(elections, c(state_name, county_name, dem_pct_20, dem_pct_16)), state_name == \"Minnesota\")\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-24_9f21fd51fd377498539b71b8fa0e3935'}\n\n```{.r .cell-code}\n# With pipes: all verbs in 1 row\nelections |> select(state_name, county_name, dem_pct_20, dem_pct_16) |> filter(state_name == \"Minnesota\")\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-25_91bec5745cd49b6bbc0d24c634f1dcb9'}\n\n```{.r .cell-code}\n# With pipes: each verb in a new row\nelections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16) |> \n  filter(state_name == \"Minnesota\")\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-26_727631b270b74e6b3688c06baa4d69e2'}\n\n```{.r .cell-code}\n# We can even do this with UN-tidyverse code in \"base\" R\nelections[elections$state_name == \"Minnesota\", c(1, 4, 8, 12)]\n```\n:::\n\n\n::: {.callout-warning title=\"Reflection\"}\nWhy will we typically use:\n\n-   tidyverse code\n-   the pipe function `|>`\n-   each verb on a new row\n:::\n\n\\\n\\\n\\\n\\\n\n**EXAMPLE 5: order of operations**\n\nSometimes, the order of operations matters. For example: putting on socks, then shoes produces a different result than putting on shoes, then socks. Sometimes order doesn't matter. For example: Pouring cereal into a bowl, then adding milk produces the same result as pouring milk into a bowl, then adding cereal (though one order is obviously better than the other ;)) Above (also copied below), we `select`ed some columns and then `filter`ed some rows:\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-27_cfd2cc2f28b6fd956f52bf215351e0c3'}\n\n```{.r .cell-code}\nelections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16) |> \n  filter(state_name == \"Minnesota\")\n```\n:::\n\n\nWould we get the same result if we reversed `select()` and `filter()`? Think first, then try it.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-28_3d1ff6aefd43a10c57eba9e52c016939'}\n\n```{.r .cell-code}\n# Try it\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n**EXAMPLE 6: Storing the results**\n\nTypically:\n\n-   We want to store our data wrangling results.\n-   It's good practice to do so under a *new* name. We want to preserve, thus don't want to *overwrite*, the original data (especially if our code contains errors!!).\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-29_0ac62ae6108adc4a5ebb58d19d056978'}\n\n```{.r .cell-code}\n# Store the results\nmn <- elections |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16) |> \n  filter(state_name == \"Minnesota\")\n\n# Always check it out to confirm it's what you want it to be!\nhead(mn)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name      county_name dem_pct_20 dem_pct_16\n1  Minnesota    Aitkin County      35.98      34.12\n2  Minnesota     Anoka County      47.79      41.01\n3  Minnesota    Becker County      33.96      30.47\n4  Minnesota  Beltrami County      47.24      40.76\n5  Minnesota    Benton County      32.70      28.33\n6  Minnesota Big Stone County      35.41      33.75\n```\n:::\n\n```{.r .cell-code}\nnrow(mn)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 87\n```\n:::\n\n```{.r .cell-code}\nnrow(elections)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3109\n```\n:::\n:::\n\n\n## Exercises\n\n### Exercise 1: select practice {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nUse `select()` to create a simplified dataset that we'll use throughout the exercises below.\n\n-   Store this dataset as `elections_small`.\n-   Only keep the following variables: state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-30_67d4b834942276033d9725d8c068ccba'}\n\n```{.r .cell-code}\n# Define elections_small\n#___ <- ___ |>\n#  ___(___)\n\n# Check out the first 6 rows to confirm your code did what you think it did!\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 2: filter demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nWhereas `select()` selects certain *variables* or columns, `filter()` keeps certain *units of observation* or rows relative to their outcome on certain variables. To this end, we must:\n\n-   Identify the variable(s) that are relevant to the filter.\n\n-   Use a \"logical comparison operator\" to define which values of the variable to *keep*:\n\n    | symbol             | meaning                   |\n    |:-------------------|:--------------------------|\n    | `==`               | equal to                  |\n    | `!=`               | not equal to              |\n    | `>`                | greater than              |\n    | `>=`               | greater than or equal to  |\n    | `<`                | less than                 |\n    | `<=`               | less than or equal to     |\n    | `%in% c(???, ???)` | a list of multiple values |\n\n-   Use quotes `\"\"` when specifying outcomes of interest for a categorical variable.\n\n\\\n\\\n\n::: {.callout-tip title=\"Commenting/Uncommenting Code\"}\n\nTo comment/uncomment several lines of code at once, highlight them then click <kbd>ctrl/cmd+shift+c</kbd>.\n\n:::\n\n\\\n\\\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-31_9565be34f355a72f7f98861f3f064bce'}\n\n```{.r .cell-code}\n# Keep only data on counties in Hawaii\n# elections_small |>\n#  filter(___ ___ ___)\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-32_567161eb2421f13d00be8efc48309742'}\n\n```{.r .cell-code}\n# What does this do?\n# elections_small |> \n#   filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-33_239623a0aa7f185678596cc917904830'}\n\n```{.r .cell-code}\n# Keep only data on counties where the Republican got MORE THAN 93.97% of the vote in 2020\n# THINK: What variable is relevant here?\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-34_9b5e195328a68ad2c13ea57360cb6e8b'}\n\n```{.r .cell-code}\n# Keep only data on counties where the Republican got AT LEAST 93.97% of the vote in 2020\n# This should have 1 more row than your answer above\n```\n:::\n\n\nWe can also filter with respect to 2 rules! Here, think what variables are relevant.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-35_c1b62ea1a8d422c9d9e03f9941267491'}\n\n```{.r .cell-code}\n# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020\n# Do this 2 ways.\n# Method 1: 2 filters with 1 condition each\n#elections_small |> \n#  filter(___) |> \n#  filter(___)\n\n# Method 2: 1 filter with 2 conditions\n#elections_small |> \n#  filter(___, ___)\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 3: arrange demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\n`arrange()` arranges or sorts the *rows* in a dataset according to a given column or variable, in ascending or descending order:\n\n`arrange(variable)`, `arrange(desc(variable))`\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-36_6baa1521efa9d5abf71538630af05c5a'}\n\n```{.r .cell-code}\n# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\n# Print out just the first 6 rows\n# elections_small |> \n#   arrange(___) |> \n#   head()\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-37_e90b2f815a3d101fe954a92e47a30bee'}\n\n```{.r .cell-code}\n# Arrange the counties in elections_small from highest to lowest percentage of 2020 Republican support\n# Print out just the first 6 rows\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 4: mutate demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\n`mutate()` can either transform / mutate an existing variable (column), or define a new variable based on existing ones.\n\n#### Part a {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-38_a491efc073402062ee0765b67e79600b'}\n\n```{.r .cell-code}\n# What did this code do?\n# elections_small |> \n#   mutate(diff_20 = repub_pct_20 - dem_pct_20) |> \n#   head()\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-39_b6c317419bf7d67ac35049e593002d53'}\n\n```{.r .cell-code}\n# What did this code do?\n# elections_small |> \n#   mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |> \n#   head()\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-40_159a08461628cdbe48caf21b9dac0a35'}\n\n```{.r .cell-code}\n# What did this code do?\n# elections_small |> \n#   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n#   head()\n```\n:::\n\n\n#### Part b {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-41_39c5fabddf64bc407e4999526a658d43'}\n\n```{.r .cell-code}\n# You try\n# Define a variable that calculates the change in Dem support in 2020 vs 2016\n#elections_small |> \n#  mutate(_____) |> \n#  head()\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-42_0f49cc9793952fcf2f2e94fa9811558c'}\n\n```{.r .cell-code}\n# You try\n# Define a variable that determines whether the Dem support was higher in 2020 than in 2016 (TRUE/FALSE)\n#elections_small |> \n#  mutate(_____) |> \n#  head()\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 5: Pipe series {-}\n\nLet's now combine these verbs into a pipe series!\n\n#### Part a {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE running the below chunk, what do you think it will produce?\n\n:::\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-43_1811af52b16351abc05c3925989ed1e1'}\n\n```{.r .cell-code}\n# elections_small |> \n#   filter(state_name == \"Wisconsin\",\n#          repub_pct_20 < dem_pct_20) |> \n#   arrange(desc(total_votes_20)) |> \n#   head()\n```\n:::\n\n\n#### Part b {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE trying, what do you think will happen if you change the order of filter and arrange:\n\n-   the results will be the same\n-   we'll get an error\n-   we won't get an error, but the results will be different\n\n:::\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-44_5371ca9c43572d164a300cdce323675a'}\n\n```{.r .cell-code}\n# Now try it. Change the order of filter and arrange below.\n# elections_small |> \n#   filter(state_name == \"Wisconsin\",\n#          repub_pct_20 < dem_pct_20) |> \n#   arrange(desc(total_votes_20)) |> \n#   head()\n```\n:::\n\n\n#### Part c {-}\n\nSo the order of `filter()` and `arrange()` did *not* matter -- rerranging them produces the same results. BUT what is one *advantage* of filtering before arranging?\n\n#### Part d {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE running the below chunk, what do you think it will produce?\n\n:::\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-45_fe7f86f5e2fabb2abb7ba4e836cd1c38'}\n\n```{.r .cell-code}\n# elections_small |> \n#   filter(state_name == \"Delaware\") |> \n#   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n#   select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n```\n:::\n\n\n#### Part e {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE trying, what do you think will happen if you change the order of mutate and select:\n\n-   the results will be the same\n-   we'll get an error\n-   we won't get an error, but the results will be different\n\n:::\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-46_ee54dcdf2c187e75684dc0ee8915ecd2'}\n\n```{.r .cell-code}\n# Now try it. Change the order of mutate and select below.\n# elections_small |> \n#   filter(state_name == \"Delaware\") |> \n#   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n#   select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 6: DIY pipe series {-}\n\nWe've now learned 4 of the 6 wrangling verbs: `select`, `filter`, `mutate`, `arrange.` Let's practice combining these into pipe series. Here are some hot tips:\n\n-   Before writing any code, translate the prompt: how many distinct wrangling steps are needed and what verb do we need in each step?\n-   Add each verb one at a time -- don't try writing a whole chunk at once.\n\n### Part a {-}\n\nShow just the counties in Minnesota and their Democratic 2020 vote percentage, from highest to lowest. Your answer should have just 2 columns.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-47_37490d3256b9c832222cc82df491357e'}\n\n:::\n\n\n#### Part b {-}\n\nCreate a new dataset named `mn_wi` that sorts the counties in Minnesota and Wisconsin from lowest to highest in terms of the *change* in Democratic vote percentage in 2020 vs 2016. This dataset should include the following variables (and only these variables): `state_name`, `county_name`, `dem_pct_20`, `dem_pct_16`, and a variable measuring the change in Democratic vote percentage in 2020 vs 2016.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-48_f286a92ae9b4c6ed4362da332776892c'}\n\n```{.r .cell-code}\n# Define the dataset\n# Only store the results once you're confident that they're correct\n\n\n# Check out the first 6 rows to confirm your results\n```\n:::\n\n\n#### Part c {-}\n\nConstruct and discuss a plot of the county-level change in Democratic vote percent in 2020 vs 2016, and how this differs between Minnesota and Wisconsin.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-49_0c0f4718311120d6f3d22af6e84d9b78'}\n\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 7: summarize demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nLet's talk about the last 2 verbs. `summarize()` (or equivalently `summarise()`) takes an entire data frame as input and outputs a single row with one or more summary statistics. For each chunk below, indicate what the code does.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-50_68e91b260cbf83ee4ac50e2fe5c02741'}\n\n```{.r .cell-code}\n# What does this do?\n# elections_small |> \n#   summarize(median(repub_pct_20))\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-51_7307dc247bb82baa28bf707cf0a8a1a8'}\n\n```{.r .cell-code}\n# What does this do?\n# elections_small |> \n#   summarize(median_repub = median(repub_pct_20))\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-52_360a31bb6105e3695a25494b3be4db9e'}\n\n```{.r .cell-code}\n# What does this do?\n# elections_small |> \n#   summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 8: `summarize` + `group_by` demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nFinally, `group_by()` groups the units of observation or rows of a data frame by a specified set of variables. Alone, this function doesn't change the appearance of our dataset or seem to do anything at all:\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-53_3389ea53228a1c191632750522a43fc1'}\n\n```{.r .cell-code}\n# elections_small |> \n#   group_by(state_name) |> \n#   head()\n```\n:::\n\n\nThough it does change the underlying structure of the dataset:\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-54_790a1ed2894fbc49bd838ac3cea2cb33'}\n\n```{.r .cell-code}\n# Check out the structure before and after group_by\n# elections_small |> \n#   class()\n# \n# elections_small |> \n#   group_by(state_name) |> \n#   class()\n```\n:::\n\n\nWhere it really shines is in partnership with `summarize()`.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-55_2906e69230ce04a7f4802d48f95cec0d'}\n\n```{.r .cell-code}\n# What does this do?\n# (What if we didn't use group_by?)\n# elections_small |> \n#   group_by(state_name) |> \n#   summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20)) \n```\n:::\n\n\n::: {.callout-warning title=\"Reflect\"}\n\nNotice that `group_by()` with `summarize()` produces new data frame or tibble! But the units of observation are now states instead of counties within states.\n\n:::\n\n\\\n\\\n\\\n\\\n\n### Exercise 9: DIY {-}\n\nLet's practice (some of) our 6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by` Remember:\n\n-   Before writing any code, translate the given prompts: how many distinct wrangling steps are needed and what verb do we need in each step?\n-   Add each verb one at a time.\n\n#### Part a {-}\n\nNOTE: Part a is a challenge exercise. If you get really stuck, move on to Part b which is the same overall question, but with hints.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-56_6ad6589d16f6cefa6ada32d0ec81f081'}\n\n```{.r .cell-code}\n# Sort the *states* from the most to least total votes cast in 2020\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-57_929f22adefc3b3e7f2077e08b71df1ce'}\n\n```{.r .cell-code}\n# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each *state*?\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-58_3073ffc3c32cf9ac579197ee5d4c7a14'}\n\n```{.r .cell-code}\n# What states did the Democratic candidate win in 2020?\n```\n:::\n\n\n#### Part b {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-59_b59fa18acf6f1f76335055723a2e78b2'}\n\n```{.r .cell-code}\n# Sort the states from the most to least total votes cast in 2020\n# HINT: Calculate the total number of votes in each state, then sort\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-60_e42cb32bef2c125f32f2e6251b012849'}\n\n```{.r .cell-code}\n# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each state?\n# HINT: First calculate the number of Dem and Repub votes in each *county*\n# Then group and summarize these by state\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-61_ee269fcfe7569704c57280f7239b20ae'}\n\n```{.r .cell-code}\n# What states did the Democratic candidate win in 2020?\n# HINT: Start with the results from the previous chunk, and then keep only some rows\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 10: Practice on new data {-}\n\nRecall the World Cup football/soccer data from TidyTuesday:\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-62_0ad27ace8bed0f39b2f16ca095ea4fd0'}\n\n```{.r .cell-code}\nworld_cup <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n```\n:::\n\n\nYou can find a codebook [here](https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-11-29). Use (some of) our 6 verbs (`select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`) and data viz to address the following prompts.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-63_c486ff1895ddbdcec2da1a8e87190e5f'}\n\n```{.r .cell-code}\n# In what years did Brazil win the World Cup?\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-64_c33c077a6978dc1d01fdcbd2ce041c1a'}\n\n```{.r .cell-code}\n# What were the 6 World Cups with the highest attendance?\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-65_f751891ef002940c467c71360a49b61a'}\n\n```{.r .cell-code}\n# Construct a univariate plot of goals_scored (no wrangling necessary)\n# This provides a visual summary of how the number of goals_scored varies from World Cup to World Cup\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-66_79e377d456980e88be908d06e8340158'}\n\n```{.r .cell-code}\n# Let's follow up the plot with some more precise numerical summaries\n# Calculate the min, median, and max number of goals_scored across all World Cups\n# NOTE: Visually compare these numerical summaries to what you observed in the plot\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-67_e31735790f44291480182f5c0de0a704'}\n\n```{.r .cell-code}\n# Construct a bivariate plot of how the number of goals_scored in the World Cup has changed over the years\n# No wrangling necessary\n```\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-68_6a4321e2358f94037441b606f7a9e329'}\n\n```{.r .cell-code}\n# Our above summaries might be a bit misleading.\n# The number of games played at the World Cup varies.\n# Construct a bivariate plot of how the typical number of goals per game has changed over the years\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 11: Practice on your data {-}\n\nReturn to the TidyTuesday data you're using in Homework 3. Use your new wrangling skills to play around. What new insights can you gain?!\n\n\\\n\\\n\\\n\\\n\n::: content-hidden\n## Wrap-up\n\n-   Homework 3 is due Tuesday!\n-   Make sure to complete any exercises from today's activity before our next class.\n-   Reach out on Slack, in office hours, etc.\n\n\\\n\\\n\\\n\\\n:::\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n### EXAMPLE 1\n\na.  select\nb.  filter\nc.  mutate\nd.  arrange\ne.  summarize\n\n\\\n\\\n\\\n\\\n\n### Exercise 1: select practice {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-69_89b12324a76537db0215200f833872da'}\n\n```{.r .cell-code}\n# Define elections_small\nelections_small <- elections |>\n  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)\n\n# Check out the first 6 rows to confirm your code did what you think it did!\nhead(elections_small)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09\n```\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 2: filter demo {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-70_ec7bab14258b8d328a7b92a333a8ca86'}\n\n```{.r .cell-code}\n# Keep only data on counties in Hawaii\nelections_small |>\n filter(state_name == \"Hawaii\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-71_98e65b34d42728ba720544b532e19077'}\n\n```{.r .cell-code}\n# Keep counties in Hawaii AND Delaware\nelections_small |> \n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-72_2eb3d3dcf5519a02503d036a9da50d9c'}\n\n```{.r .cell-code}\n# Keep only data on counties where the Republican got MORE THAN 93.97% of the vote in 2020\nelections_small |> \n  filter(repub_pct_20 > 93.97)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  Borden County            416        95.43       3.85\n2      Texas    King County            159        94.97       5.03\n3      Texas Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            365       8.49\n2            159       3.14\n3            550       3.64\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-73_8f7c74ea41576fc72581fea028cb84a5'}\n\n```{.r .cell-code}\n# Keep only data on counties where the Republican got AT LEAST 93.97% of the vote in 2020\n# This should have 1 more row than your answer above\nelections_small |> \n  filter(repub_pct_20 >= 93.97)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Montana Garfield County            813        93.97       5.04\n2      Texas   Borden County            416        95.43       3.85\n3      Texas     King County            159        94.97       5.03\n4      Texas  Roberts County            550        96.18       3.09\n  total_votes_16 dem_pct_16\n1            715       4.76\n2            365       8.49\n3            159       3.14\n4            550       3.64\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-74_8480e1a56b4b0b971d1d8c093d77591a'}\n\n```{.r .cell-code}\n# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020\n# Do this 2 ways.\n# Method 1: 2 filters with 1 condition each\nelections_small |>\n filter(state_name == \"Texas\") |>\n filter(dem_pct_20 > 65)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n```\n:::\n\n```{.r .cell-code}\n# Method 2: 1 filter with 2 conditions\nelections_small |>\n filter(state_name == \"Texas\", dem_pct_20 > 65)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas  El Paso County         267215        31.56      66.66\n2      Texas Presidio County           2217        32.52      65.99\n3      Texas   Travis County         610349        26.43      71.41\n4      Texas   Zavala County           4379        34.03      65.40\n  total_votes_16 dem_pct_16\n1         210458      69.14\n2           2203      66.18\n3         462511      66.26\n4           3390      77.67\n```\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 3: arrange demo {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-75_e525ecd646b68bdee6693cb9086dfcdb'}\n\n```{.r .cell-code}\n# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\n# Print out just the first 6 rows\nelections_small |>\n  arrange(repub_pct_20) |>\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            state_name            county_name total_votes_20 repub_pct_20\n1 District of Columbia   District of Columbia         344356         5.40\n2             Maryland Prince George's County         424855         8.73\n3             Maryland         Baltimore city         237461        10.69\n4             Virginia        Petersburg city          14118        11.22\n5             New York        New York County         694904        12.26\n6           California   San Francisco County         443458        12.72\n  dem_pct_20 total_votes_16 dem_pct_16\n1      92.15         280272      92.85\n2      89.26         351091      89.33\n3      87.28         208980      85.44\n4      87.75          13717      87.52\n5      86.78         591368      87.17\n6      85.27         365295      85.53\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-76_dd6d352d854f724f1500516a9045f65a'}\n\n```{.r .cell-code}\n# Arrange the counties in elections_small from highest to lowest percentage of 2020 Republican support\n# Print out just the first 6 rows\nelections_small |>\n  arrange(desc(repub_pct_20)) |>\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name      county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas   Roberts County            550        96.18       3.09\n2      Texas    Borden County            416        95.43       3.85\n3      Texas      King County            159        94.97       5.03\n4    Montana  Garfield County            813        93.97       5.04\n5      Texas Glasscock County            653        93.57       5.97\n6   Nebraska     Grant County            402        93.28       4.98\n  total_votes_16 dem_pct_16\n1            550       3.64\n2            365       8.49\n3            159       3.14\n4            715       4.76\n5            602       5.65\n6            394       5.08\n```\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 4: mutate demo {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-77_843830ece1e138f29a660fea89dc46bd'}\n\n```{.r .cell-code}\n# Define diff_20, the difference btwn the Repub and Dem percent in 2020\nelections_small |> \n  mutate(diff_20 = repub_pct_20 - dem_pct_20) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 diff_20\n1          24661      23.96   44.42\n2          94090      19.57   53.76\n3          10390      46.66    7.66\n4           8748      21.42   57.73\n5          25384       8.47   80.00\n6           4701      75.09  -49.86\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-78_2e52977fcb97b30ef43e9a140aca08fe'}\n\n```{.r .cell-code}\n# Define repub_votes_20, the number (not percent) of Repub votes in 2020\nelections_small |> \n  mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_votes_20\n1          24661      23.96          19839\n2          94090      19.57          83542\n3          10390      46.66           5622\n4           8748      21.42           7525\n5          25384       8.47          24711\n6           4701      75.09           1146\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-79_6771050fa3b79cc95a97b60d8fdb5172'}\n\n```{.r .cell-code}\n# Define repub_win_20, whether the Repub won in 2020 (TRUE or FALSE!)\nelections_small |> \n  mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_win_20\n1          24661      23.96         TRUE\n2          94090      19.57         TRUE\n3          10390      46.66         TRUE\n4           8748      21.42         TRUE\n5          25384       8.47         TRUE\n6           4701      75.09        FALSE\n```\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 5: Pipe series {-}\n\n#### Part c {-}\n\nIt's more \"computationally efficient\" to get rid of some rows before arranging.\n\n#### Part e {-}\n\nWe can't select a variable before we define it!\n\n\\\n\\\n\\\n\\\n\n### Exercise 6: DIY pipe series {-}\n\n#### Part a {-}\n\nHere's my translation:\n\n-   just the counties in Minnesota ---\\> filter\n-   just the counties in Minnesota and their Democratic 2020 vote percentage ---\\> select\n-   from highest to lowest ---\\> arrange\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-80_447638287fbc6baa99213682e48fd50f'}\n\n```{.r .cell-code}\n# Remember to try this 1 line at a time\nelections_small |> \n  filter(state_name == \"Minnesota\") |> \n  select(county_name, dem_pct_20) |> \n  arrange(desc(dem_pct_20))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                county_name dem_pct_20\n1             Ramsey County      71.50\n2           Hennepin County      70.46\n3               Cook County      65.58\n4          St. Louis County      56.64\n5             Dakota County      55.73\n6            Olmsted County      54.16\n7         Washington County      53.46\n8         Blue Earth County      50.84\n9               Clay County      50.74\n10              Lake County      50.64\n11          Nicollet County      50.31\n12           Carlton County      49.58\n13            Winona County      49.07\n14              Rice County      48.76\n15          Mahnomen County      48.26\n16             Anoka County      47.79\n17          Beltrami County      47.24\n18            Carver County      46.37\n19             Mower County      46.00\n20             Scott County      45.52\n21           Houston County      42.42\n22           Goodhue County      41.23\n23          Freeborn County      40.96\n24            Norman County      40.80\n25            Itasca County      40.61\n26       Koochiching County      38.41\n27          Watonwan County      38.20\n28           Kittson County      38.12\n29           Stevens County      37.80\n30           Stearns County      37.58\n31          Fillmore County      37.48\n32            Steele County      37.47\n33         Kandiyohi County      36.12\n34            Aitkin County      35.98\n35              Lyon County      35.94\n36     Lac qui Parle County      35.79\n37           Wabasha County      35.78\n38             Grant County      35.58\n39          Traverse County      35.46\n40         Big Stone County      35.41\n41        Pennington County      35.29\n42              Pope County      35.27\n43              Polk County      34.88\n44              Cass County      34.68\n45            Wright County      34.49\n46           Hubbard County      34.42\n47             Swift County      34.35\n48         Crow Wing County      34.17\n49           Chisago County      34.15\n50            Becker County      33.96\n51              Pine County      33.87\n52          Le Sueur County      33.73\n53          Chippewa County      33.67\n54            Nobles County      33.65\n55            Waseca County      33.65\n56             Dodge County      33.47\n57        Otter Tail County      32.85\n58            Benton County      32.70\n59           Douglas County      32.56\n60             Brown County      32.48\n61         Sherburne County      32.48\n62         Faribault County      31.98\n63          Red Lake County      31.47\n64          Renville County      30.71\n65            McLeod County      30.64\n66   Yellow Medicine County      30.54\n67           Lincoln County      30.08\n68        Cottonwood County      30.03\n69           Kanabec County      30.02\n70            Martin County      30.02\n71           Jackson County      29.99\n72        Mille Lacs County      29.98\n73            Wilkin County      29.91\n74              Rock County      29.69\n75            Murray County      29.60\n76            Isanti County      29.45\n77            Sibley County      28.60\n78            Meeker County      28.58\n79           Redwood County      28.43\n80 Lake of the Woods County      27.87\n81        Clearwater County      26.76\n82         Pipestone County      26.44\n83            Wadena County      26.35\n84            Roseau County      25.98\n85          Marshall County      25.33\n86              Todd County      24.79\n87          Morrison County      22.33\n```\n:::\n:::\n\n\n#### Part b {-}\n\nHere's my translation:\n\n-   counties in Minnesota and Wisconsin ---\\> filter\n-   change in Democratic vote percentage in 2020 vs 2016 ---\\> mutate (we don't already have this)\n-   sorts the counties from highest to lowest ---\\> arrange\n-   include the following variables (and only these variables) ---\\> select\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-81_62579cf117d195df61472e5fb85e8b4d'}\n\n```{.r .cell-code}\n# Remember to try this 1 line at a time before storing!\nmn_wi <- elections_small |> \n  filter(state_name %in% c(\"Minnesota\", \"Wisconsin\")) |> \n  select(state_name, county_name, dem_pct_20, dem_pct_16) |>\n  mutate(dem_change = dem_pct_20 - dem_pct_16) |> \n  arrange(dem_change)\n  \n# Check it out\nhead(mn_wi)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  state_name        county_name dem_pct_20 dem_pct_16 dem_change\n1  Minnesota     Stevens County      37.80      39.55      -1.75\n2  Wisconsin      Forest County      34.06      35.12      -1.06\n3  Wisconsin    Kewaunee County      32.87      33.73      -0.86\n4  Wisconsin       Clark County      30.37      31.19      -0.82\n5  Wisconsin       Adams County      36.63      37.40      -0.77\n6  Wisconsin Trempealeau County      40.86      41.57      -0.71\n```\n:::\n:::\n\n\n#### Part c {-}\n\nThere was a stronger Dem shift from 2016 to 2020 in Minnesota. Further, in most counties across both states, the percent Dem tended to be higher in 2020 than in 2016.\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-82_b526fcc555558a4fb33c0f2e8176aa01'}\n\n```{.r .cell-code}\nggplot(mn_wi, aes(x = dem_change, fill = state_name)) + \n  geom_density(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](activity-08_files/figure-html/unnamed-chunk-82-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(mn_wi, aes(y = dem_change, x = state_name)) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](activity-08_files/figure-html/unnamed-chunk-82-2.png){width=672}\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 7: summarize demo {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-83_e3f43b488d0ebbcffde0071230c914af'}\n\n```{.r .cell-code}\n# Calculate the median Repub vote percentage in 2020 across all counties\nelections_small |> \n  summarize(median(repub_pct_20))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  median(repub_pct_20)\n1                68.29\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-84_0f9d4e4f042c045c8bbdfe0cc2d1d6c4'}\n\n```{.r .cell-code}\n# Calculate the median Repub vote percentage in 2020 across all counties\n# AND name it \"median_repub\"\nelections_small |> \n  summarize(median_repub = median(repub_pct_20))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  median_repub\n1        68.29\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-85_b654a9c0565531919011725dd420e5e1'}\n\n```{.r .cell-code}\n# Calculate the median Repub vote percentage in 2020 across all counties\n# AND the total number of votes across all counties\n# AND name the results\nelections_small |> \n  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  median_repub total_votes\n1        68.29   157949293\n```\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 8: `summarize` + `group_by` demo {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-86_2a8074927a4ef040a1d37af6ae44b7ae'}\n\n```{.r .cell-code}\n# Calculate the median 2020 Repub percent and total votes BY STATE\nelections_small |> \n  group_by(state_name) |> \n  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 3\n   state_name           median_repub total_votes\n   <chr>                       <dbl>       <int>\n 1 Alabama                      70.6     2323304\n 2 Arizona                      57.9     3387326\n 3 Arkansas                     72.1     1219069\n 4 California                   44.8    17495906\n 5 Colorado                     56.2     3256953\n 6 Connecticut                  41.0     1824280\n 7 Delaware                     47.1      504010\n 8 District of Columbia          5.4      344356\n 9 Florida                      64.6    11067456\n10 Georgia                      68       4997716\n# ℹ 40 more rows\n```\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 9: DIY {-}\n\n#### Part a {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-87_0b09ea650394e2875cd44b9a09017f41'}\n\n```{.r .cell-code}\n# Sort the states from the most to least total votes in 2020\nelections_small |> \n  group_by(state_name) |> \n  summarize(total = sum(total_votes_20)) |> \n  arrange(desc(total))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 2\n   state_name        total\n   <chr>             <int>\n 1 California     17495906\n 2 Texas          11317911\n 3 Florida        11067456\n 4 New York        8616205\n 5 Pennsylvania    6925255\n 6 Illinois        6038850\n 7 Ohio            5922202\n 8 Michigan        5539302\n 9 North Carolina  5524801\n10 Georgia         4997716\n# ℹ 40 more rows\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-88_262366863e07b6a00639752340871f0c'}\n\n```{.r .cell-code}\n# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each *state*?\nelections_small |> \n  mutate(dem_votes_20 = round(total_votes_20 * dem_pct_20 / 100), \n         repub_votes_20 = round(total_votes_20 * repub_pct_20 / 100)) |> \n  group_by(state_name) |> \n  summarize(dem_total = sum(dem_votes_20),\n            repub_total = sum(repub_votes_20))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 3\n   state_name           dem_total repub_total\n   <chr>                    <dbl>       <dbl>\n 1 Alabama                 849664     1441155\n 2 Arizona                1672127     1661671\n 3 Arkansas                423919      760641\n 4 California            11109642     6006031\n 5 Colorado               1804393     1364627\n 6 Connecticut            1080677      715315\n 7 Delaware                296274      200601\n 8 District of Columbia    317324       18595\n 9 Florida                5297131     5668600\n10 Georgia                2473661     2461869\n# ℹ 40 more rows\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-89_63f85226ceb87d13606e539c1aebb3fa'}\n\n```{.r .cell-code}\n# What states did the Democratic candidate win in 2020?\nelections_small |> \n  mutate(dem_votes_20 = round(total_votes_20 * dem_pct_20 / 100), \n         repub_votes_20 = round(total_votes_20 * repub_pct_20 / 100)) |> \n  group_by(state_name) |> \n  summarize(dem_total = sum(dem_votes_20),\n            repub_total = sum(repub_votes_20)) |> \n  filter(dem_total > repub_total)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26 × 3\n   state_name           dem_total repub_total\n   <chr>                    <dbl>       <dbl>\n 1 Arizona                1672127     1661671\n 2 California            11109642     6006031\n 3 Colorado               1804393     1364627\n 4 Connecticut            1080677      715315\n 5 Delaware                296274      200601\n 6 District of Columbia    317324       18595\n 7 Georgia                2473661     2461869\n 8 Hawaii                  366121      196865\n 9 Illinois               3471916     2446931\n10 Maine                   430466      359897\n# ℹ 16 more rows\n```\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 10: Practice on new data {-}\n\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-90_b91b895efb12688fe07c8f22db9d114b'}\n\n```{.r .cell-code}\n# In what years did Brazil win the World Cup?\nworld_cup |> \n  filter(winner == \"Brazil\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  year               host winner         second        third       fourth\n1 1958             Sweden Brazil         Sweden       France West Germany\n2 1962              Chile Brazil Czechoslovakia        Chile   Yugoslavia\n3 1970             Mexico Brazil          Italy West Germany      Uruguay\n4 1994                USA Brazil          Italy       Sweden     Bulgaria\n5 2002 Japan, South Korea Brazil        Germany       Turkey  South Korea\n  goals_scored teams games attendance\n1          126    16    35     868000\n2           89    16    32     776000\n3           95    16    32    1673975\n4          141    24    52    3568567\n5          161    32    64    2724604\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-91_b86f54387db6a32909a71029a2cabbda'}\n\n```{.r .cell-code}\n# What were the 6 World Cups with the highest attendance?\nworld_cup |> \n  arrange(desc(attendance)) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  year               host  winner    second       third      fourth\n1 1994                USA  Brazil     Italy      Sweden    Bulgaria\n2 2014             Brazil Germany Argentina Netherlands      Brazil\n3 2006            Germany   Italy    France     Germany    Portugal\n4 2018             Russia  France   Croatia     Belgium     England\n5 1998             France  France    Brazil     Croatia Netherlands\n6 2002 Japan, South Korea  Brazil   Germany      Turkey South Korea\n  goals_scored teams games attendance\n1          141    24    52    3568567\n2          171    32    64    3441450\n3          147    32    64    3367000\n4          169    32    64    3031768\n5          171    32    64    2859234\n6          161    32    64    2724604\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-92_0cd3b1c878272e73579eee375ad055bb'}\n\n```{.r .cell-code}\n# Construct a univariate plot of goals_scored (no wrangling necessary)\n# This provides a visual summary of how the number of goals_scored varies from World Cup to World Cup\nggplot(world_cup, aes(x = goals_scored)) + \n  geom_histogram(color = \"white\")\n```\n\n::: {.cell-output-display}\n![](activity-08_files/figure-html/unnamed-chunk-92-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-93_96f14e925db9517e3db3db59be7f1405'}\n\n```{.r .cell-code}\n# Let's follow up the plot with some more precise numerical summaries\n# Calculate the min, median, and max number of goals_scored across all World Cups\n# NOTE: Visually compare these numerical summaries to what you observed in the plot\nworld_cup |> \n  summarize(min(goals_scored), median(goals_scored), max(goals_scored))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  min(goals_scored) median(goals_scored) max(goals_scored)\n1                70                  126               171\n```\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-94_6c42d08c1d657af722243195b684ec6c'}\n\n```{.r .cell-code}\n# Construct a bivariate plot of how the number of goals_scored in the World Cup has changed over the years\n# No wrangling necessary\nggplot(world_cup, aes(x = year, y = goals_scored)) + \n  geom_point() + \n  geom_line()\n```\n\n::: {.cell-output-display}\n![](activity-08_files/figure-html/unnamed-chunk-94-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='activity-08_cache/html/unnamed-chunk-95_a9c6e1803ed47561581bb19b03068297'}\n\n```{.r .cell-code}\n# Our above summaries might be a bit misleading.\n# The number of games played at the World Cup varies.\n# Construct a bivariate plot of how the typical number of goals per game has changed over the years\nper_game_data <- world_cup |> \n  mutate(goals_per_game = goals_scored / games)\n\nggplot(per_game_data, aes(x = year, y = goals_per_game)) + \n  geom_point() + \n  geom_line()\n```\n\n::: {.cell-output-display}\n![](activity-08_files/figure-html/unnamed-chunk-95-1.png){width=672}\n:::\n:::\n\n\n</details>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}